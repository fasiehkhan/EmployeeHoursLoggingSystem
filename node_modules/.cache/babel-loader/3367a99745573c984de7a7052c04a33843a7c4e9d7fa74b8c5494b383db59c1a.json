{"ast":null,"code":"var _jsxFileName = \"/Users/fasiehkhan/Documents/GitHub/EmployeeHoursLoggingSystem/src/views/EmployeeTimePunches.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { React, useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmployeeTimePunches = () => {\n  _s();\n  // call db and based on that render this\n  const [isShiftStarted, setShiftStarted] = useState(false);\n  const [isBreakStarted, setBreakStarted] = useState(false);\n  const [isShiftEnded, setShiftEnded] = useState(false);\n  const [isBreakEnded, setBreakEnded] = useState(false);\n  const [backendData, setBackendData] = useState([{}]);\n  const employeeID = 4;\n  useEffect(() => {\n    fetch(`http://localhost:3002/api/endTimeNull/${employeeID}`).then(response => response.json()).then(data => {\n      if (JSON.stringify(data) === '[]') {\n        setShiftStarted(false);\n        setBreakStarted(false);\n        setShiftEnded(true);\n        setBreakEnded(true);\n      } else {\n        // check if it is work or break\n        setBreakStarted(true);\n        setShiftStarted(true);\n        if (data[0].type === \"Work\") {\n          setBreakEnded(true);\n        } else {\n          setShiftEnded(true);\n        }\n      }\n    });\n  }, []);\n  const [dt, setDt] = useState(new Date().toLocaleString());\n  useEffect(() => {\n    let secTimer = setInterval(() => {\n      setDt(new Date().toLocaleString());\n    }, 1000);\n    return () => clearInterval(secTimer);\n  }, []);\n  let navigate = useNavigate();\n  const navigateToStartShift = () => {\n    let path = `/employee-start-shift`;\n    navigate(path);\n  };\n  const navigateToEndShift = () => {\n    let path = `/employee-end-shift`;\n    navigate(path);\n  };\n  const navigateToStartBreak = () => {\n    let path = `/employee-start-break`;\n    navigate(path);\n  };\n  const navigateToEndBreak = () => {\n    let path = `/employee-end-break`;\n    navigate(path);\n  };\n  const navigateBack = () => {\n    navigate(-1);\n  };\n  const navigateToLogoutPage = () => {\n    let path = `/logout`;\n    navigate(path);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Time Punches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Employee ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }, this), \" \", dt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emp\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"What would you like to do?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"c-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"c1\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"btn1\",\n            variant: \"outline-light\",\n            onClick: navigateToStartShift,\n            disabled: isShiftStarted,\n            size: \"lg\",\n            children: \"Start Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btn2\",\n            variant: \"outline-light\",\n            onClick: navigateToEndShift,\n            disabled: isShiftEnded,\n            size: \"lg\",\n            children: \"End Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"vr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"c3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"btn3\",\n            variant: \"outline-light\",\n            onClick: navigateToStartBreak,\n            disabled: isBreakStarted,\n            size: \"lg\",\n            children: \"Start Break\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btn4\",\n            variant: \"outline-light\",\n            onClick: navigateToEndBreak,\n            disabled: isBreakEnded,\n            size: \"lg\",\n            children: \"End Break\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"back\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        id: \"back-btn\",\n        variant: \"light\",\n        onClick: navigateBack,\n        size: \"sm\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"logout-btn\",\n        variant: \"light\",\n        onClick: navigateToLogoutPage,\n        size: \"sm\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeTimePunches, \"Trfm83j+jGNlB8X1N8M6zfEuyng=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeTimePunches;\nvar _c;\n$RefreshReg$(_c, \"EmployeeTimePunches\");","map":{"version":3,"names":["useNavigate","React","useState","useEffect","Button","EmployeeTimePunches","isShiftStarted","setShiftStarted","isBreakStarted","setBreakStarted","isShiftEnded","setShiftEnded","isBreakEnded","setBreakEnded","backendData","setBackendData","employeeID","fetch","then","response","json","data","JSON","stringify","type","dt","setDt","Date","toLocaleString","secTimer","setInterval","clearInterval","navigate","navigateToStartShift","path","navigateToEndShift","navigateToStartBreak","navigateToEndBreak","navigateBack","navigateToLogoutPage"],"sources":["/Users/fasiehkhan/Documents/GitHub/EmployeeHoursLoggingSystem/src/views/EmployeeTimePunches.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { React, useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nexport const EmployeeTimePunches = () => {\n    // call db and based on that render this\n    const [isShiftStarted, setShiftStarted] = useState(false)\n    const [isBreakStarted, setBreakStarted] = useState(false)\n    const [isShiftEnded, setShiftEnded] = useState(false)\n    const [isBreakEnded, setBreakEnded] = useState(false)\n\n    const [backendData, setBackendData] = useState([{}])\n\n    const employeeID = 4;\n\n    useEffect(() => {\n        fetch(`http://localhost:3002/api/endTimeNull/${employeeID}`).then(\n            response => response.json()\n        ).then(\n            data => {\n                if (JSON.stringify(data) === '[]') {\n                    setShiftStarted(false)\n                    setBreakStarted(false)\n                    setShiftEnded(true)\n                    setBreakEnded(true)\n                } else {\n                    // check if it is work or break\n                    setBreakStarted(true)\n                    setShiftStarted(true)\n\n                    if (data[0].type === \"Work\") {\n                        setBreakEnded(true)\n                    } else {\n                        setShiftEnded(true)\n                    }\n                }\n            }\n        )\n    }, [])\n\n    const [dt, setDt] = useState(new Date().toLocaleString());\n    useEffect(() => {\n        let secTimer = setInterval(() => {\n            setDt(new Date().toLocaleString())\n        }, 1000)\n        return () => clearInterval(secTimer);\n    }, []);\n    let navigate = useNavigate();\n\n    const navigateToStartShift = () => {\n        let path = `/employee-start-shift`;\n        navigate(path);\n    };\n    const navigateToEndShift = () => {\n        let path = `/employee-end-shift`;\n        navigate(path);\n    };\n    const navigateToStartBreak = () => {\n        let path = `/employee-start-break`;\n        navigate(path);\n    };\n    const navigateToEndBreak = () => {\n        let path = `/employee-end-break`;\n        navigate(path);\n    };\n    const navigateBack = () => {\n        navigate(-1);\n    };\n    const navigateToLogoutPage = () => {\n        let path = `/logout`;\n        navigate(path);\n    };\n    return (\n        <div className=\"employee\">\n            <h1>Employee Time Punches</h1>\n            <br></br>\n            <p><strong>Name:</strong> </p>\n            <p><strong>Employee ID:</strong> </p>\n            <p><strong>Current Date:</strong> {dt}</p>\n            <br></br><br></br>\n            <div id=\"emp\">\n                <p>What would you like to do?</p>\n                <div id=\"c-main\">\n                    <div id=\"c1\">\n                        <Button id=\"btn1\" variant=\"outline-light\" onClick={navigateToStartShift} disabled={isShiftStarted} size=\"lg\" >Start Shift</Button>\n                        <Button id=\"btn2\" variant=\"outline-light\" onClick={navigateToEndShift} disabled={isShiftEnded} size=\"lg\" >End Shift</Button>\n                    </div>\n                    <div class=\"vr\"></div>\n                    <div id=\"c3\">\n                        <Button id=\"btn3\" variant=\"outline-light\" onClick={navigateToStartBreak} disabled={isBreakStarted} size=\"lg\" >Start Break</Button>\n                        <Button id=\"btn4\" variant=\"outline-light\" onClick={navigateToEndBreak} disabled={isBreakEnded} size=\"lg\" >End Break</Button>\n                    </div>\n                </div>\n            </div>\n            <div id=\"back\">\n                <Button id=\"back-btn\" variant=\"light\" onClick={navigateBack} size=\"sm\">Back</Button>\n                <Button id=\"logout-btn\" variant=\"light\" onClick={navigateToLogoutPage} size=\"sm\">Logout</Button>\n            </div>\n        </div>\n    )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}